plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.gorylenko.gradle-git-properties" version '2.4.1'
}

group = 'lostark'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-registry-prometheus'

	//json
	implementation 'org.jsoup:jsoup:1.15.3'
	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

	//swagger
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'mysql:mysql-connector-java:8.0.32'


	// email 인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

task release {
	/* ./gradlew build 먼저 실행*/
	dependsOn("build")

	doLast {
		def stdout = new ByteArrayOutputStream()
		// exec - 커맨드 라인 프로세서; 파워셀/터미널에서 실행하는 것과 같다.
		exec {
			commandLine 'eb', 'setenv', 'SPRING_PROFILES_ACTIVE=prod'
			standardOutput = stdout
		}
		// 결과 로깅을 위한 작업
		println "eb setenv SPRING_PROFILES_ACTIVE=prod :\n$stdout";
		exec {
			commandLine 'eb', 'deploy'
			standardOutput = stdout
		}
		println "eb deploy :\n$stdout";
		println "Release succeeded.";
	}
}

test {
	useJUnitPlatform()
}

springBoot {
	buildInfo()
}
